//-------------------------------------------------------------------------------
// Annotations
//-------------------------------------------------------------------------------

//@Package('lintbug')

//@Export('LintTask')

//@Require('Class')
//@Require('Obj')


//-------------------------------------------------------------------------------
// Common Modules
//-------------------------------------------------------------------------------

var bugpack = require('bugpack').context();


//-------------------------------------------------------------------------------
// BugPack
//-------------------------------------------------------------------------------

var Class       = bugpack.require('Class');
var Obj         = bugpack.require('Obj');


//-------------------------------------------------------------------------------
// Declare Class
//-------------------------------------------------------------------------------

var LintTask = Class.extend(Obj, {


    //-------------------------------------------------------------------------------
    // Constructor
    //-------------------------------------------------------------------------------

    /**
     * @param {string} taskName
     * @param {string} taskMethod
     */
    _constructor: function(taskName, taskMethod) {

        this._super();


        //-------------------------------------------------------------------------------
        // Private Properties
        //-------------------------------------------------------------------------------


        /**
         * @private
         * @type {string}
         */
        this.taskName       = taskName;

        /**
         * @private
         * @type {function(Error)}
         */
        this.taskMethod       = taskMethod;
    },


    //-------------------------------------------------------------------------------
    // Getters and Setters
    //-------------------------------------------------------------------------------

    /**
     * @return {string}
     */
    getTaskName: function() {
        return this.taskName;
    },

    /**
     * @return {string}
     */
    getTaskMethod: function(fileContents) {
        return this.taskMethod;
    },


    //-------------------------------------------------------------------------------
    // Instance Methods
    //-------------------------------------------------------------------------------

    /**
     * @param {LintFile} lintFile
     * @param {function(Error)} callback
     */
    runTask: function(lintFile, callback) {
        this.taskMethod.call(undefined, lintFile, callback);
    }
});


//-------------------------------------------------------------------------------
// Exports
//-------------------------------------------------------------------------------

bugpack.export('lintbug.LintTask', LintTask);
